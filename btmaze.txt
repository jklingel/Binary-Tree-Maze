10 rem binary tree maze v1.0
15 rem jan-arendt klingel, 2022
20 rem *******************************
30 ch=81:rem character for maze
35 sc=1024:rem start of scr mem on c64
50 gosub 1000:rem initialize screen
60 gosub 2000:rem base structure
70 gosub 3000:rem create maze
270 rem *******************************
275 rem wait for keyboard input
280 poke 19,1:rem quite input on
285 input in$
290 poke 19,0:rem quite input off
400 clr:goto 30:rem restart
480 rem *******************************
485 rem end program
490 print chr$(9):rem unlock chr set
500 end
1000 rem ******************************
1010 rem set up screen
1020 poke 53280,1:rem border color
1030 poke 53281,1:rem background color
1040 poke 646,9:rem text color
1050 print chr$(147):rem clear screen
1060 print chr$(142):rem uppercase
1070 print chr$(8):rem lock chr set
1080 return
2000 rem ******************************
2010 rem draw base structure
2020 for ro=0to24: rem rows
2030 for co=0to38: rem columns
2040 poke sc+(ro*40+co),ch
2050 if ro/2<>int(ro/2) then co=co+1
2060 next co
2070 next ro
2080 rem poke sc+120,32:rem maze entry
2085 poke sc+878,32:rem maze exit
2100 return
3000 rem *******************************
3005 rem create the maze
3010 for ro=1to23:rem rows
3020 for co=1to37:rem columns
3030 di=int(rnd(1)*2+1):rem left or up
3034 if ro=1andco>1then poke sc+(ro*40+co-1),32:goto 3050
3035 if co=1andro>1then poke sc+(ro*40+co-40),32:goto 3050
3038 if di=1 then poke sc+(ro*40+co-1),32:goto 3050
3040 if di=2 then poke sc+(ro*40+co-40),32
3050 next co
3055 ro=ro+1:rem only even rows
3060 next ro
3070 return
